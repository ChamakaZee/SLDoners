[{"D:\\Uni\\proj x\\src\\index.js":"1","D:\\Uni\\proj x\\src\\reportWebVitals.js":"2","D:\\Uni\\proj x\\src\\App.js":"3","D:\\Uni\\proj x\\src\\components\\create-organuser.component.js":"4","D:\\Uni\\proj x\\src\\components\\Info-organ.component.js":"5","D:\\Uni\\proj x\\src\\components\\donate-organ.component.js":"6","D:\\Uni\\proj x\\src\\components\\list-organ.component.js":"7","D:\\Uni\\proj x\\src\\components\\contact-organ.component.js":"8","D:\\Uni\\proj x\\src\\components\\view-organ.component.js":"9","D:\\Uni\\proj x\\src\\components\\login-organ.component.js":"10"},{"size":628,"mtime":1609953637980,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":4005,"mtime":1610388789169,"results":"14","hashOfConfig":"12"},{"size":3665,"mtime":1605561428477,"results":"15","hashOfConfig":"12"},{"size":4683,"mtime":1610302202690,"results":"16","hashOfConfig":"12"},{"size":12523,"mtime":1607875611652,"results":"17","hashOfConfig":"12"},{"size":6258,"mtime":1610774250898,"results":"18","hashOfConfig":"12"},{"size":3550,"mtime":1604819387840,"results":"19","hashOfConfig":"12"},{"size":7271,"mtime":1610388645004,"results":"20","hashOfConfig":"12"},{"size":2357,"mtime":1613471135697,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"do7jf9",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"25"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},"D:\\Uni\\proj x\\src\\index.js",["53"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["54","55"],"D:\\Uni\\proj x\\src\\reportWebVitals.js",[],"D:\\Uni\\proj x\\src\\App.js",["56","57","58","59","60"],"import React, { useContext, createContext, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useHistory, useLocation} from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport DonateOrgan from \"./components/donate-organ.component\";\nimport ListOrgan from \"./components/list-organ.component\";\nimport InfoOrgans from \"./components/Info-organ.component\";\nimport InfoOrgan from \"./components/view-organ.component\";\nimport ContactOrgan from \"./components/contact-organ.component\";\nimport CreateUser from \"./components/create-organuser.component\";\nimport Login from \"./components/login-organ.component\";\n\nimport logo5 from \"./images/5.JPG\";\nimport logo from \"./images/logo_1.JPG\";\n\nexport default function App() {\n  return (\n    <ProvideAuth>\n      <Router>\n        <div className=\"container background-color-main\" style={{ height: '100%', width: '100%', overflow: 'scroll'}}>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <h6 class=\"navbar-brand\" target=\"_blank\">\n              <img src={logo5} width=\"100\" height=\"50\" alt=\"#\" />\n            </h6>\n            <h3>Helping Hand Foundation <h5>Donate Your Organ , You Could Save Many Lives</h5></h3>\n            <div class=\"ml-auto\">\n              <img src={logo} class=\"rounded float-right\" width=\"100\" height=\"80\" alt=\"#\"></img>\n            </div>\n          </nav>\n         \n          <Switch>\n            <Route path=\"/login\"><LoginPage /></Route>\n            <Route path=\"/donate\" component={DonateOrgan} />\n            <Route path=\"/list\" component={ListOrgan} />\n            <Route path=\"/info\" component={InfoOrgans} />\n            <Route path=\"/view/:id\" component={InfoOrgan} />\n            <Route path=\"/contact\" component={ContactOrgan} />\n            <Route path=\"/new-user\" component={CreateUser} />\n            <Route path=\"/\"  component={Login} />\n          </Switch>\n        </div>\n      </Router>\n    </ProvideAuth>\n  );\n}\n\nconst fakeAuth = {\n  isAuthenticated: false,\n  signin(cb) {\n    fakeAuth.isAuthenticated = true;\n    setTimeout(cb, 100); // fake async\n  },\n  signout(cb) {\n    fakeAuth.isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n};\n\nconst authContext = createContext();\n\nfunction ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return (\n    <authContext.Provider value={auth}>\n      {children}\n    </authContext.Provider>\n  );\n}\n\nfunction useAuth() {\n  return useContext(authContext);\n}\n\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n\n  const signin = cb => {\n    return fakeAuth.signin(() => {\n      setUser(\"user\");\n      cb();\n    });\n  };\n\n  const signout = cb => {\n    return fakeAuth.signout(() => {\n      setUser(null);\n      cb();\n    });\n  };\n\n  return {\n    user,\n    signin,\n    signout\n  };\n}\n\nfunction AuthButton() {\n  let history = useHistory();\n  let auth = useAuth();\n\n  return auth.user ? (\n    <p> Welcome!{\" \"}\n      <button onClick={() => {auth.signout(() => history.push(\"/\"));}}>\n        Sign out\n      </button>\n    </p> ) : (\n    <p>You are not logged in</p>\n  );\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n  let auth = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth.user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicPage() {\n  return <h3>Public</h3>;\n}\n\nfunction ProtectedPage() {\n  return <h3>Protected</h3>;\n}\n\nfunction LoginPage() {\n  let history = useHistory();\n  let location = useLocation();\n  let auth = useAuth();\n\n  let { from } = location.state || { from: { pathname: \"/\" } };\n  let login = () => {\n    auth.signin(() => {\n      history.replace(from);\n    });\n  };\n\n  return (\n    <div>\n      <p>You must log in to view the page at {from.pathname}</p>\n      <button onClick={login}>Log in</button>\n    </div>\n  );\n}\n","D:\\Uni\\proj x\\src\\components\\create-organuser.component.js",["61"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from 'axios';\n\nimport \"../css/Login.css\";\n\nexport default function NewUser() {\n  const history = useHistory(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [dateOfBirth, setDOB] = useState(\"\");\n  const [ssn, setSSN] = useState(\"\");\n  const [adress, setAdress] = useState(\"\");\n  const [contactNo, setContactNo] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && fullName.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    history.push(\"/donate\");\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n\n    const newUser = {\n      fullName: fullName,\n      email: email,\n      password: password,\n      dateOfBirth: dateOfBirth,\n      ssn: ssn,\n      adress: adress,\n      contactNo: contactNo\n\n    }\n\n    console.log(newUser);\n\n    axios.post('http://localhost:4000/users/new-user', newUser)\n      .then(res => console.log(res.data));\n\n    alert(\"User Registered Succesfully\");\n    history.push(\"/donate\");\n  }\n\n  return (\n    <div className=\"Login\">\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group required\">\n          <label class=\"control-label\">Full Name </label>\n          <input type=\"text\"\n            required\n            className=\"form-control\"\n            value={fullName}\n            onChange={(e) => setFullName(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-group required\">\n          <label class=\"control-label\">Email </label>\n          <input type=\"email\"\n            required\n            className=\"form-control\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-group required\">\n          <label class=\"control-label\">Password </label>\n          <input type=\"password\"\n            required\n            className=\"form-control\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-group form-group required\">\n          <label class=\"control-label\">Date of Birth</label>\n          <input\n            type=\"date\"\n            dateformat=\"DD-MM-YYYY\"\n            className=\"form-control\"\n            value={dateOfBirth}\n            onChange={(e) => setDOB(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-group required\">\n          <label class=\"control-label\">Social Service Number \\ NIC </label>\n          <input type=\"text\"\n            required\n            className=\"form-control\"\n            value={ssn}\n            onChange={(e) => setSSN(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-group required\">\n          <label class=\"control-label\">Adress</label>\n          <input type=\"text\"\n            required\n            className=\"form-control\"\n            value={adress}\n            onChange={(e) => setAdress(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group required\">\n          <label class=\"control-label\">Contact Number</label>\n          <input type=\"tel\"\n            required\n            className=\"form-control\"\n            value={contactNo}\n            // pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\"\n            onChange={(e) => setContactNo(e.target.value)}\n          />\n        </div>\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n          Register\n      </Button>\n      </form>\n    </div>\n  );\n}","D:\\Uni\\proj x\\src\\components\\Info-organ.component.js",["62","63","64","65","66","67"],"import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport mainImg from \"../images/main.JPG\";\r\nimport donateImg from \"../images/one-organ-donor-eight-lives.jpg\";\r\nimport helpImg from \"../images/help.png\";\r\n\r\nexport default class InfoOrgan extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div style={{marginTop: 10}} class =\"background-color-main\">\r\n            <div className=\"container\" class =\"background-color-main\">\r\n                <h6>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                    <div className=\"collpase navbar-collapse\">\r\n                        <ul className=\"nav nav-pills nav-fil\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/donate\" className=\"nav-link text-primary\">Donate Organs</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/list\" className=\"nav-link text-primary\">Request Organs</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/info\" className=\"nav-link text-primary\">How Donation Works</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/contact\" className=\"nav-link text-primary\">Contact Us</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                </h6>\r\n                <div><img src={mainImg} class=\"img-fluid\" alt=\"Responsive image\"/></div>\r\n                <br></br>\r\n                <h6>Registering as a Donor</h6>\r\n                    <p>The process of donation most often begins with your consent to be a donor by registering in your state. Signing up does not guarantee you will be able to donate your organs, eyes, or tissues—and registering usually takes place many years before donation becomes possible. But it is the first step to being eligible to save lives.</p>\r\n                    <div class=\"text-center\"><img src={donateImg} class=\"img-fluid\" alt=\"Responsive image\"/></div>\r\n                <p></p>\r\n                <h6>Medical Care of Potential Donors</h6>\r\n                    <p>For someone to become a deceased donor, he or she has to die in very specific circumstances. Most often, a patient comes to a hospital because of illness or accident, such as a severe head trauma, a brain aneurysm or stroke.</p>\r\n                    <p>The patient is put on artificial or mechanical support, which keeps blood with oxygen flowing to the organs. The medical team does everything possible to save the patient's life. At this point, whether or not the person is a registered donor is not considered.</p>\r\n                <p></p>\r\n                <h6>The Matching Process</h6>\r\n                <p>If the deceased person's evaluation allows donation, the OPO contacts the Organ Procurement and Transplantation Network (OPTN).</p>\r\n                <p>The OPTN operates the national database of all patients in the Srilanka waiting for a transplant. The OPO enters information about the deceased donor into the computer system and the search begins.</p>\r\n                    <p>The computer system generates a list of patients who match the donor (by organ). Each available organ is offered to the transplant team of the best-matched patient.</p>\r\n                    <p>The transplant surgeon determines whether the organ is medically suitable for that patient or may refuse the organ—for example, if the patient is too sick to be transplanted or cannot be reached in time.</p>\r\n                    <p>Most organs go to patients in the area where the organs were recovered. The others are shared with patients in other regions of the country</p>\r\n                    \r\n                <p></p>\r\n                <h6>‌Transplanting the Organs</h6>\r\n                    <p>The transplant operation takes place after the transport team arrives at the hospital with the new organ. The transplant recipient is typically waiting at the hospital and may already be in the operating room awaiting the arrival of the lifesaving organ.</p>\r\n                    <p>Surgical teams work around the clock as needed to transplant the new organs into the waiting recipients.</p>\r\n                    <div class=\"text-center\"><img src={helpImg} class=\"img-fluid\" alt=\"Responsive image\"/></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n   ","D:\\Uni\\proj x\\src\\components\\donate-organ.component.js",["68","69","70","71"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport mainImg from \"../images/main.JPG\";\r\n\r\nexport default class DonateOrgans extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeOrganType = this.onChangeOrganType.bind(this);\r\n        this.onChangeOrganDate = this.onChangeOrganDate.bind(this);\r\n        this.onChangeOrganRepresentative = this.onChangeOrganRepresentative.bind(this);\r\n        this.onChangeOrganDiseases = this.onChangeOrganDiseases.bind(this);\r\n        this.onChangeOrganNote = this.onChangeOrganNote.bind(this);\r\n        this.onChangeOrganBlood = this.onChangeOrganBlood.bind(this);\r\n        this.onChangeOrganContact = this.onChangeOrganContact.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            organ_type: '',\r\n            organ_date: '',\r\n            organ_representative: '',\r\n            organ_diseases: '',\r\n            organ_note: '',\r\n            organ_blood: '',\r\n            organ_contact: ''\r\n        }\r\n    }\r\n\r\n    onChangeOrganType(e) {\r\n            this.setState({organ_type: e.target.value });      \r\n    }\r\n\r\n    onChangeOrganDate(e) {\r\n        this.setState({organ_date: e.target.value });\r\n    }\r\n\r\n    onChangeOrganRepresentative(e) {\r\n        this.setState({organ_representative: e.target.value});\r\n    }\r\n\r\n    onChangeOrganDiseases(e) {\r\n        this.setState({ organ_diseases: e.target.value});\r\n    }\r\n\r\n    onChangeOrganNote(e) {\r\n        this.setState({organ_note: e.target.value});\r\n    }\r\n\r\n    onChangeOrganContact(e) {\r\n        this.setState({organ_contact: e.target.value});\r\n    }\r\n\r\n    onChangeOrganBlood(e) {\r\n        this.setState({organ_blood: e.target.value});\r\n    }\r\n\tonSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        console.log(`Organ Type: ${this.state.organ_type}`);\r\n        console.log(`Organ Date: ${this.state.onChangeOrganDate}`);\r\n        console.log(`Organ Representative: ${this.state.organ_representative}`);\r\n        console.log(`Organ Rep. Contacts: ${this.state.organ_contact}`);\r\n        console.log(`Organ Diseases: ${this.state.organ_diseases}`);\r\n        console.log(`Organ Note: ${this.state.organ_note}`);\r\n        console.log(`Organ Blood: ${this.state.organ_blood}`);\r\n     \r\n        if(this.handleValidation())\r\n        {\r\n            const newOrgan = {\r\n                organ_type: this.state.organ_type,\r\n                organ_date: this.state.organ_date,\r\n                organ_representative: this.state.organ_representative,\r\n                organ_contact: this.state.organ_contact,\r\n                organ_diseases: this.state.organ_diseases,\r\n                organ_note: this.state.organ_note,\r\n                organ_blood: this.state.organ_blood\r\n            };\r\n    \r\n            axios.post('http://localhost:4000/organs/add', newOrgan)\r\n                .then(res => console.log(res.data));\r\n    \r\n            this.setState({\r\n                organ_agreed: '',\r\n                organ_date: '',\r\n                organ_representative: '',\r\n                organ_contact: '',\r\n                organ_diseases: '',\r\n                organ_note: '',\r\n                organ_blood: '',\r\n                fields: {},\r\n                errors: {}\r\n            })\r\n            alert(\"Organ Detail Saved Succesfully\");\r\n         } else\r\n         {\r\n            alert(\"You should fill the mandatory fields\");\r\n         }\r\n     \r\n            \r\n    }\r\n\r\n    handleValidation(){\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        //Name\r\n        if(!this.state.organ_representative){\r\n           formIsValid = false;\r\n           errors[\"nominee_name\"] = \"Cannot be Empty\";\r\n        }\r\n\r\n        if(!this.state.organ_type){\r\n            formIsValid = false;\r\n            errors[\"organ_type\"] = \"Cannot be Empty\";\r\n         }\r\n\r\n         if(!this.state.organ_blood){\r\n            formIsValid = false;\r\n            errors[\"organ_blood\"] = \"Cannot be Empty\";\r\n         }\r\n\r\n        if(typeof this.state.organ_representative !== \"undefined\"){\r\n           if(!this.state.organ_representative.match(/^[a-zA-Z\\s]*$/)){\r\n              formIsValid = false;\r\n              errors[\"name\"] = \"Only letters\";\r\n           }        \r\n        }\r\n        // contact\r\n        if(!this.state.organ_contact){\r\n            formIsValid = false;\r\n            errors[\"nominee_contact\"] = \"Cannot be Empty\";\r\n         }\r\n\r\n        // deseasas\r\n         if(!this.state.organ_diseases){\r\n            formIsValid = false;\r\n            errors[\"donar_diseases\"] = \"Can not be Empty , No-Deseasas : please menctioned \";\r\n         }\r\n\r\n       this.setState({errors: errors});\r\n       return formIsValid;\r\n   }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 10}} class =\"background-color-main\">\r\n            <div className=\"container background-color-main full-height\">\r\n                <h6>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                    <div className=\"collpase navbar-collapse\">\r\n                        <ul className=\"nav nav-pills nav-fil\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/donate\" className=\"nav-link text-primary\">Donate Organs</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/list\" className=\"nav-link text-primary\">Request Organs</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/info\" className=\"nav-link text-primary\">How Donation Works</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/contact\" className=\"nav-link text-primary\">Contact Us</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                </h6>\r\n                <div><img src={mainImg} class=\"img-fluid\" alt=\"Responsive image\"/></div>\r\n                <br></br>\r\n                <h6>Oragan Donations - Please fill and submit the following details </h6>\r\n                <p></p>\r\n                \r\n                <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" ref=\"validationAlert\">\r\n                <strong>Information Requires !</strong> You should fill the mandatory fields\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                </div>\r\n                \r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group form-group required\"> \r\n                        <label class=\"control-label\">Oragan Type </label>\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <button class=\"btn btn-outline-secondary\" type=\"button\">Choose...</button>\r\n                            </div>\r\n                            <select id=\"organ_type\"\r\n                                    class=\"custom-select\"  \r\n                                    value={this.state.organ_type}\r\n                                    onChange={this.onChangeOrganType}>\r\n                                <option value=\"ERROR\">select one ...</option> \r\n                                <option value=\"Liver\">Liver</option> \r\n                                <option value=\"Heart\">Heart</option> \r\n                                <option value=\"Lung\">Lung</option> \r\n                                <option value=\"Kidney\">Kidney</option> \r\n                                <option value=\"Intestine\">Intestine</option> \r\n                                <option value=\"Pancreas\">Pancreas</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group form-group required\">\r\n                        <label class=\"control-label\">When You Like to Donate </label>\r\n                        <input  \r\n                                type=\"date\"\r\n                                dateformat=\"DD-MM-YYYY\"\r\n                                min={new Date()} \r\n                                className=\"form-control\"\r\n                                value={this.state.organ_date}\r\n                                onChange={this.onChangeOrganDate}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group form-group required\">\r\n                        <label class=\"control-label\">Blood Type </label>\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <button class=\"btn btn-outline-secondary\" type=\"button\">Choose...</button>\r\n                            </div>\r\n                            <select id=\"organ_blood\"\r\n                                    class=\"custom-select\" \r\n                                    value={this.state.organ_blood} \r\n                                    onChange={this.onChangeOrganBlood}>\r\n                                <option value=\"ERROR\">select one ...</option> \r\n                                <option value=\"A+\">A+</option> \r\n                                <option value=\"A-\">A-</option> \r\n                                <option value=\"B+\">B+</option> \r\n                                <option value=\"B-\">B-</option> \r\n                                <option value=\"AB+\">AB+</option> \r\n                                <option value=\"AB-\">AB-</option>\r\n                                <option value=\"O+\">O+</option> \r\n                                <option value=\"O-\">O-</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group form-group required\">\r\n                        <label class=\"control-label\">Nominate a Representative</label>\r\n                        <input  id=\"nominee_name\"\r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                value={this.state.organ_representative}\r\n                                onChange={this.onChangeOrganRepresentative} \r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group form-group required \">\r\n                        <label class=\"control-label\">Nominee Contact </label>\r\n                        <input  id=\"nominee_contact\"\r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                value={this.state.organ_contact}\r\n                                onChange={this.onChangeOrganContact}\r\n                                //placeholder=\"Eg: +9411 234 355\"\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group form-group required\">\r\n                        <label class=\"control-label\">Diseases in Last 3 Years </label>\r\n                        <input  id=\"donar_diseases\"\r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                value={this.state.organ_diseases}\r\n                                onChange={this.onChangeOrganDiseases}\r\n                                //placeholder=\"Eg: No Dieseases \\ covid-19 \\ etc\"\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Note  </label>\r\n                        <textarea \r\n                                type=\"textarea\" \r\n                                rows={3}\r\n                                className=\"form-control\"\r\n                                value={this.state.organ_note}\r\n                                onChange={this.onChangeOrganNote}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Donate Organ\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","D:\\Uni\\proj x\\src\\components\\list-organ.component.js",["72","73","74"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport mainImg from \"../images/main.JPG\";\r\n\r\nconst Organ = props => (\r\n    <tr>\r\n        <td>{props.organ.organ_type}</td>\r\n        <td>{props.organ.organ_blood}</td>\r\n        <td>{props.organ.organ_date}</td>\r\n        <td>{props.organ.organ_diseases}</td>\r\n        <td>\r\n            <Link to={\"/view/\"+props.organ._id}>More Details</Link>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nexport default class OrganList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {organs: []};\r\n        \r\n        this.onChangeOrganType = this.onChangeOrganType.bind(this);\r\n        this.onChangeOrganBlood = this.onChangeOrganBlood.bind(this);\r\n        this.searchOrgan = this.searchOrgan.bind(this);\r\n \r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/organs/')\r\n            .then(response => {\r\n                this.setState({ organs: response.data });  \r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            })\r\n    }\r\n    \r\n    organList() {\r\n        return this.state.organs.map(function(currentOrgan, i){\r\n            return <Organ organ={currentOrgan} key={i} />; \r\n        })\r\n    }\r\n\r\n    searchOrgan(e){\r\n        e.preventDefault();\r\n        const filteredOrgans = this.state.organs.filter(org => org.organ_type === this.state.organ_type && org.organ_blood === this.state.organ_blood )\r\n        console.log('filr', filteredOrgans)\r\n        this.setState({organs: filteredOrgans})\r\n   \r\n        console.log(\"search organ list : \" + this.state.organs);\r\n        console.log(\"search organ type : \" + this.state.organ_type);\r\n        console.log(\"search organ blood : \" + this.state.organ_blood); \r\n    }\r\n\r\n    onChangeOrganType(e) {\r\n        this.setState({organ_type: e.target.value });      \r\n    }\r\n\r\n    onChangeOrganBlood(e) {\r\n        this.setState({organ_blood: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 10}} class =\"background-color-main\">\r\n            <div className=\"container\">\r\n            <h6>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                    <div className=\"collpase navbar-collapse\">\r\n                        <ul className=\"nav nav-pills nav-fil\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/donate\" className=\"nav-link text-primary\">Donate Organs</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/list\" className=\"nav-link text-primary\">Request Organs</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/info\" className=\"nav-link text-primary\">How Donation Works</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/contact\" className=\"nav-link text-primary\">Contact Us</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                </h6>\r\n                <div><img src={mainImg} class=\"img-fluid\" alt=\"Responsive image\"/></div>\r\n                <br></br>\r\n\r\n                <form onSubmit={this.searchOrgan}>\r\n                <div class=\"row\">\r\n                    <div class=\"col-5\">\r\n                        <select id=\"organ_type\"\r\n                                        class=\"custom-select\"  \r\n                                        value={this.state.organ_type}\r\n                                        onChange={this.onChangeOrganType}>\r\n                            <option value=\"ERROR\">select organ ...</option> \r\n                            <option value=\"Liver\">Liver</option> \r\n                            <option value=\"Heart\">Heart</option> \r\n                            <option value=\"Lung\">Lung</option> \r\n                            <option value=\"Kidney\">Kidney</option> \r\n                            <option value=\"Intestine\">Intestine</option> \r\n                            <option value=\"Pancreas\">Pancreas</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"col-5\">\r\n                        <select id=\"organ_blood\"\r\n                                        class=\"custom-select\" \r\n                                        value={this.state.organ_blood} \r\n                                        onChange={this.onChangeOrganBlood}>\r\n                            <option value=\"ERROR\">select blood type ...</option> \r\n                            <option value=\"A+\">A+</option> \r\n                            <option value=\"A-\">A-</option> \r\n                            <option value=\"B+\">B+</option> \r\n                            <option value=\"B-\">B-</option> \r\n                            <option value=\"AB+\">AB+</option> \r\n                            <option value=\"AB-\">AB-</option>\r\n                            <option value=\"O+\">O+</option> \r\n                            <option value=\"O-\">O-</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                        <button type=\"submit\" class=\"btn btn-primary mb-2\">SEARCH</button>\r\n                    </div>\r\n                </div>\r\n               \r\n\r\n                <br></br>\r\n                <h5>Current Organ List</h5>\r\n                <table className=\"table table-striped\" style={{ marginTop: 20 }} >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Organ Type</th>\r\n                            <th>Blood Type</th>\r\n                            <th>Available Date</th>\r\n                            <th>Donar Deseases</th>\r\n                            <th>Details</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { this.organList() }\r\n                    </tbody>\r\n                </table>\r\n                </form>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\Uni\\proj x\\src\\components\\contact-organ.component.js",["75","76","77","78","79","80","81"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n//import { Map, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nimport mainImg from \"../images/main.JPG\";\r\nimport aboutImg from \"../images/about_us_header.png\";\r\nimport helpImg from \"../images/help.png\";\r\n\r\nexport default class ContactUs extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ marginTop: 10 }} class=\"background-color-main\">\r\n                <div className=\"container\" class=\"background-color-main\">\r\n                    <h6>\r\n                        <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                            <div className=\"collpase navbar-collapse\">\r\n                                <ul className=\"nav nav-pills nav-fil\">\r\n                                    <li className=\"nav-item\">\r\n                                        <Link to=\"/donate\" className=\"nav-link text-primary\">Donate Organs</Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <Link to=\"/list\" className=\"nav-link text-primary\">Request Organs</Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <Link to=\"/info\" className=\"nav-link text-primary\">How Donation Works</Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <Link to=\"/contact\" className=\"nav-link text-primary\">Contact Us</Link>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </nav>\r\n                    </h6>\r\n                    <div><img src={mainImg} class=\"img-fluid\" alt=\"Responsive image\" /></div>\r\n                    <br></br>\r\n                    <h6>About ...</h6>\r\n                    <p>\r\n                        The Division of Transplantation (DoT) is within the Department of Health and Human Services, Health Resources and Services Administration's Healthcare Systems Bureau (HSB). DoT is the primary federal entity responsible for oversight of the nation’s organ and blood stem cell transplant systems and for initiatives to increase organ and blood stem cell donations in the Srilanka\r\n                        <div class=\"text-center\"><img src={aboutImg} class=\"img-fluid\" alt=\"Responsive image\" /></div>\r\n                    </p>\r\n                    <p></p>\r\n                    <h6>Contact Information</h6>\r\n                    <p></p>\r\n                    <p>The Helping Hand Foundation - Sri Lanka</p>\r\n                    <p>180/15 Wajaya Road</p>\r\n                    <p>Colombo 7</p>\r\n                    <p>Sri Lanka</p>\r\n                    <br></br>\r\n                    <p>Telephone : 011 222 3456</p>\r\n                    <p>Email : helpingHand@support.com</p>\r\n                    <p></p>\r\n                    <div class=\"text-center\"><img src={helpImg} class=\"img-fluid\" alt=\"Responsive image\" /></div>\r\n                    {/* <Map\r\n                    google={this.props.google}\r\n                    zoom={8}\r\n                    style={mapStyles}\r\n                    initialCenter={{ lat: 47.444, lng: -122.176}}\r\n                    /> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\Uni\\proj x\\src\\components\\view-organ.component.js",["82","83"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport mainImg from \"../images/main.JPG\";\r\nimport viewImg from \"../images/view-organ.jpg\";\r\n\r\n\r\nexport default class ViewOrgan extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeOrganType = this.onChangeOrganType.bind(this);\r\n        this.onChangeOrganDate = this.onChangeOrganDate.bind(this);\r\n        this.onChangeOrganRepresentative = this.onChangeOrganRepresentative.bind(this);\r\n        this.onChangeOrganDiseases = this.onChangeOrganDiseases.bind(this);\r\n        this.onChangeOrganNote = this.onChangeOrganNote.bind(this);\r\n        this.onChangeOrganBlood = this.onChangeOrganBlood.bind(this);\r\n        this.onChangeOrganContact = this.onChangeOrganContact.bind(this);\r\n\r\n        this.state = {\r\n            organ_type: '',\r\n            organ_date: '',\r\n            organ_representative: '',\r\n            organ_diseases: '',\r\n            organ_note: '',\r\n            organ_blood: '',\r\n            organ_contact: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/organs/'+this.props.match.params.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    organ_type: response.data.organ_type,\r\n                    organ_date: response.data.organ_date,\r\n                    organ_representative: response.data.organ_representative,\r\n                    organ_diseases: response.data.organ_diseases,\r\n                    organ_note: response.data.organ_note,\r\n                    organ_blood: response.data.organ_blood,\r\n                    organ_contact: response.data.organ_contact    \r\n                })   \r\n\r\n                console.log(response.data);\r\n            })\r\n\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    onChangeOrganType(e) {\r\n        this.setState({organ_type: e.target.value });      \r\n    }\r\n\r\n    onChangeOrganDate(e) {\r\n        this.setState({organ_date: e.target.value });\r\n    }\r\n\r\n    onChangeOrganRepresentative(e) {\r\n        this.setState({organ_representative: e.target.value});\r\n    }\r\n\r\n    onChangeOrganDiseases(e) {\r\n        this.setState({ organ_diseases: e.target.value});\r\n    }\r\n\r\n    onChangeOrganNote(e) {\r\n        this.setState({organ_note: e.target.value});\r\n    }\r\n\r\n    onChangeOrganContact(e) {\r\n        this.setState({organ_contact: e.target.value});\r\n    }\r\n\r\n    onChangeOrganBlood(e) {\r\n        this.setState({organ_blood: e.target.value});\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n        <div style={{marginTop: 10}} class =\"background-color-main\">\r\n            <div className=\"container\" class =\"background-color-main\">\r\n                <h6>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                    <div className=\"collpase navbar-collapse\">\r\n                        <ul className=\"nav nav-pills nav-fil\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/donate\" className=\"nav-link text-primary\">Donate Organs</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/list\" className=\"nav-link text-primary\">Request Organs</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/info\" className=\"nav-link text-primary\">How Donation Works</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/contact\" className=\"nav-link text-primary\">Contact Us</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                </h6>\r\n                <div><img src={mainImg} class=\"img-fluid\" alt=\"Responsive image\"/></div>\r\n                <br></br>\r\n                               \r\n                <form>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Organ Type</label>\r\n                        <div class=\"col-sm-10\">\r\n                            <input class=\"form-control\" type=\"text\" value={this.state.organ_type} readonly = \"readonly\" onChange={this.onChangeOrganType}/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Organ Date</label>\r\n                        <div class=\"col-sm-10\">\r\n                            <input class=\"form-control\" type=\"text\" value={this.state.organ_date} readonly = \"readonly\" onChange={this.onChangeOrganDate}/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Organ Representative</label>\r\n                        <div class=\"col-sm-10\">\r\n                            <input class=\"form-control\" type=\"text\" value={this.state.organ_representative} readonly = \"readonly\" onChange={this.onChangeOrganRepresentative}/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Organ Dieseases</label>\r\n                        <div class=\"col-sm-10\">\r\n                            <input class=\"form-control\" type=\"text\" value={this.state.organ_diseases} readonly = \"readonly\" onChange={this.onChangeOrganDiseases}/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Organ Note</label>\r\n                        <div class=\"col-sm-10\">\r\n                            <input class=\"form-control\" type=\"text\" value={this.state.organ_note} readonly = \"readonly\" onChange={this.onChangeOrganNote}/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Organ Blood</label>\r\n                        <div class=\"col-sm-10\">\r\n                            <input class=\"form-control\" type=\"text\" value={this.state.organ_blood} readonly = \"readonly\" onChange={this.onChangeOrganBlood}/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Organ Contacts</label>\r\n                        <div class=\"col-sm-10\">\r\n                            <input class=\"form-control\" type=\"text\" value={this.state.organ_contact} readonly = \"readonly\" onChange={this.onChangeOrganContact}/>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <br></br>\r\n                <div><img src={viewImg} class=\"img-fluid\" alt=\"Responsive image\"  width=\"100%\" height=\"80\"/></div>\r\n             </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Uni\\proj x\\src\\components\\login-organ.component.js",["84","85","86","87","88","89","90","91","92"],"import React, { useState, Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport \"../css/Login.css\";\r\n\r\nexport default function Login() {\r\n  const history = useHistory(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  function validateForm() {\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    axios.get('http://localhost:4000/users/getUsers')\r\n      .then(response => {\r\n        console.log(response.data);\r\n        console.log(\"Form User : \" + email);\r\n        console.log(\"From password : \" + password);\r\n\r\n        let registeredUser = false;\r\n        const numbers = response.data;\r\n\r\n        numbers.forEach(function (number) {\r\n          if (number.email == email && number.password == password) {\r\n            registeredUser = true;\r\n            console.log(\"User Founds : Already registered user : \" + email); // => \r\n            history.push(\"/donate\");\r\n          }\r\n        });\r\n\r\n        console.log(\"User Status : \" + registeredUser);\r\n        if (!registeredUser) {\r\n          alert(\"Invalied User Name or Password\");\r\n        }\r\n      })\r\n  }\r\n\r\n  const checkUser = {\r\n    isRegistered: false,\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group size=\"lg\" controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n          Login\r\n        </Button>\r\n        <p></p>\r\n        <div>\r\n          <Link to=\"/new-user\">Create New User</Link>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}",["93","94"],{"ruleId":"95","severity":1,"message":"96","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"95","severity":1,"message":"103","line":2,"column":50,"nodeType":"97","messageId":"98","endLine":2,"endColumn":54},{"ruleId":"95","severity":1,"message":"104","line":99,"column":10,"nodeType":"97","messageId":"98","endLine":99,"endColumn":20},{"ruleId":"95","severity":1,"message":"105","line":113,"column":10,"nodeType":"97","messageId":"98","endLine":113,"endColumn":22},{"ruleId":"95","severity":1,"message":"106","line":134,"column":10,"nodeType":"97","messageId":"98","endLine":134,"endColumn":20},{"ruleId":"95","severity":1,"message":"107","line":138,"column":10,"nodeType":"97","messageId":"98","endLine":138,"endColumn":23},{"ruleId":"95","severity":1,"message":"108","line":22,"column":12,"nodeType":"97","messageId":"98","endLine":22,"endColumn":24},{"ruleId":"95","severity":1,"message":"109","line":2,"column":27,"nodeType":"97","messageId":"98","endLine":2,"endColumn":33},{"ruleId":"95","severity":1,"message":"110","line":2,"column":35,"nodeType":"97","messageId":"98","endLine":2,"endColumn":40},{"ruleId":"111","severity":1,"message":"112","line":10,"column":5,"nodeType":"113","messageId":"114","endLine":12,"endColumn":6},{"ruleId":"115","severity":1,"message":"116","line":38,"column":22,"nodeType":"117","endLine":38,"endColumn":83},{"ruleId":"115","severity":1,"message":"116","line":42,"column":46,"nodeType":"117","endLine":42,"endColumn":109},{"ruleId":"115","severity":1,"message":"116","line":59,"column":46,"nodeType":"117","endLine":59,"endColumn":107},{"ruleId":"95","severity":1,"message":"109","line":3,"column":27,"nodeType":"97","messageId":"98","endLine":3,"endColumn":33},{"ruleId":"95","severity":1,"message":"110","line":3,"column":35,"nodeType":"97","messageId":"98","endLine":3,"endColumn":40},{"ruleId":"95","severity":1,"message":"118","line":106,"column":13,"nodeType":"97","messageId":"98","endLine":106,"endColumn":19},{"ruleId":"115","severity":1,"message":"116","line":172,"column":22,"nodeType":"117","endLine":172,"endColumn":83},{"ruleId":"95","severity":1,"message":"109","line":3,"column":27,"nodeType":"97","messageId":"98","endLine":3,"endColumn":33},{"ruleId":"95","severity":1,"message":"110","line":3,"column":35,"nodeType":"97","messageId":"98","endLine":3,"endColumn":40},{"ruleId":"115","severity":1,"message":"116","line":90,"column":22,"nodeType":"117","endLine":90,"endColumn":83},{"ruleId":"95","severity":1,"message":"119","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":13},{"ruleId":"95","severity":1,"message":"109","line":3,"column":27,"nodeType":"97","messageId":"98","endLine":3,"endColumn":33},{"ruleId":"95","severity":1,"message":"110","line":3,"column":35,"nodeType":"97","messageId":"98","endLine":3,"endColumn":40},{"ruleId":"111","severity":1,"message":"112","line":12,"column":5,"nodeType":"113","messageId":"114","endLine":14,"endColumn":6},{"ruleId":"115","severity":1,"message":"116","line":40,"column":26,"nodeType":"117","endLine":40,"endColumn":88},{"ruleId":"115","severity":1,"message":"116","line":45,"column":50,"nodeType":"117","endLine":45,"endColumn":113},{"ruleId":"115","severity":1,"message":"116","line":58,"column":46,"nodeType":"117","endLine":58,"endColumn":108},{"ruleId":"115","severity":1,"message":"116","line":106,"column":22,"nodeType":"117","endLine":106,"endColumn":83},{"ruleId":"115","severity":1,"message":"116","line":154,"column":22,"nodeType":"117","endLine":154,"endColumn":109},{"ruleId":"95","severity":1,"message":"120","line":1,"column":27,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"109","line":5,"column":27,"nodeType":"97","messageId":"98","endLine":5,"endColumn":33},{"ruleId":"95","severity":1,"message":"121","line":5,"column":35,"nodeType":"97","messageId":"98","endLine":5,"endColumn":41},{"ruleId":"95","severity":1,"message":"110","line":5,"column":43,"nodeType":"97","messageId":"98","endLine":5,"endColumn":48},{"ruleId":"95","severity":1,"message":"122","line":5,"column":56,"nodeType":"97","messageId":"98","endLine":5,"endColumn":64},{"ruleId":"95","severity":1,"message":"123","line":5,"column":78,"nodeType":"97","messageId":"98","endLine":5,"endColumn":89},{"ruleId":"124","severity":1,"message":"125","line":31,"column":28,"nodeType":"126","messageId":"127","endLine":31,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":31,"column":56,"nodeType":"126","messageId":"127","endLine":31,"endColumn":58},{"ruleId":"95","severity":1,"message":"128","line":45,"column":9,"nodeType":"97","messageId":"98","endLine":45,"endColumn":18},{"ruleId":"99","replacedBy":"129"},{"ruleId":"101","replacedBy":"130"},"no-unused-vars","'Popper' is defined but never used.","Identifier","unusedVar","no-native-reassign",["131"],"no-negated-in-lhs",["132"],"'Link' is defined but never used.","'AuthButton' is defined but never used.","'PrivateRoute' is defined but never used.","'PublicPage' is defined but never used.","'ProtectedPage' is defined but never used.","'handleSubmit' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'fields' is assigned a value but never used.","'axios' is defined but never used.","'Component' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'useLocation' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'checkUser' is assigned a value but never used.",["131"],["132"],"no-global-assign","no-unsafe-negation"]